в поиск ввел git bash
pwd путь папки в которой находимся /c/Users/Admin

cd Downloads поподем в папку /c/Users/Admin/downloads
cd - возврат на папку
cd ~ возврат в домашнюю папку
cd .. подняться на одну папку
cd ../../ подняться на 2 папки
ls список файлов в папке
ls ~/Desktop список файлов на рабочем столе
ls -1 ( cmder название папки) покажет файлы в папку в столбик из-за -1
start . открывается проводник
start  ~/c/dcim
кнопка Tab подсказывает имена файлов

git status означает что было измено и где мы находимся, мы в тетке мастер On branch master
git add index.html добавит только индекс в отслеживаемые файлы
git add . добавит все файлы т.е. проиндексирует
git commit -m "add: First commit"  добавили первый коммит
git log узнаем про все коммиты
git show (хеш комита) покажет все изменения в файле в комите
git diff --staged() показывает не проиндексированные изменнения
git checkout (css/button.css имя удаленного файла) эта команда возвращает файл если он был закомичен
git checkout (хеш и название файла) тоже вернет файл
git reset HEAD (index.html) означает что не хотим этот файл индексировать т.е. отменяет git add index.html
git commit --amend -m 'Здесь пишем новое название' исправляет последнее название коммита
git rm test.css удаляем закомиченный файл в комите
git tm --cashed test.css удаляем файл с комита, но не удаляем из папки
git commit --amend --no-edit изменяем последний коммит
git log --oneline ввыдит все коммиты в одну строку
git cat-file -p хеш   выводит родителя и подробности хеша
git checkout -b (yellow-design) (хеш) делаем пометку вместо мастера  делаем yellow-design
git log --oneline --all смотрим все логи
HEAD указывает где мы находимся
git checkout master попадем последний коммит мастера
git merge yellow-design -m "Коммит объединение двух веток" влили ветку yellow в мастер
git checkout -b firefox-bug-fix имя новой ветки
git checkout -b module1-task1

